name: Build and deploy

permissions:
  id-token: write
  contents: read
  actions: read
  pull-requests: write

on:
  push:
    branches:
      - "main"
      - "release"
      - "develop"
      - "feature/cicd"
  pull_request:
    types:
      - "opened"
      - "synchronize"
    branches:
      - "main"
      - "release"
      - "develop"


jobs:
  superapp_web:
    name: Superapp Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set GIT_REF
        run: bash ./env.sh >> "$GITHUB_ENV"

      - name: Login to Azure Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.REGISTRY_LOGIN_SERVER }}
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push image
        run: |
          docker build super-app/web/ -t ${{ vars.REGISTRY_LOGIN_SERVER }}/superapp-web:${{ github.sha }} --build-arg BASE_DOMAIN_WITH_PROTOCOL=$BASE_DOMAIN_WITH_PROTOCOL --build-arg BASE_SUPERAPP_WEB_PATH=$BASE_SUPERAPP_WEB_PATH --build-arg BASE_SUPERAPP_SERVER_PATH=$BASE_SUPERAPP_SERVER_PATH --build-arg SUPERAPP_SUPABASE_URL=$SUPERAPP_SUPABASE_URL --build-arg SUPERAPP_SUPABASE_ANON_KEY=$SUPERAPP_SUPABASE_ANON_KEY --build-arg MAIN_URL=$MAIN_URL
          docker push ${{ vars.REGISTRY_LOGIN_SERVER }}/superapp-web:${{ github.sha }}
        env:
          MAIN_URL: ${{ env.MAIN_URL }}
          BASE_DOMAIN_WITH_PROTOCOL: ${{ env.BASE_DOMAIN_WITH_PROTOCOL }}
          BASE_SUPERAPP_WEB_PATH: ${{ env.BASE_SUPERAPP_WEB_PATH }}
          BASE_SUPERAPP_SERVER_PATH: ${{ env.BASE_SUPERAPP_SERVER_PATH }}
          SUPERAPP_SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          SUPERAPP_SUPABASE_ANON_KEY: ${{ vars.SUPABASE_ANON_KEY }}

  superapp_server:
    name: Superapp Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set GIT_REF
        run: bash ./env.sh >> "$GITHUB_ENV"

      - name: Write pull request comment
        uses: actions/github-script@v7
        with:
          script: |
            const { MAIN_URL } = process.env;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Pull request live demo: ${MAIN_URL}`
            });
        env:
          MAIN_URL: ${{ env.MAIN_URL }}
        if: github.event_name == 'pull_request' && github.event.action == 'opened'
        
      - name: Build and push image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.REGISTRY_LOGIN_SERVER }}
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build super-app/server/ -t ${{ vars.REGISTRY_LOGIN_SERVER }}/superapp-server:${{ github.sha }}
          docker push ${{ vars.REGISTRY_LOGIN_SERVER }}/superapp-server:${{ github.sha }}

  markets_web:
    name: Markets Website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set GIT_REF
        run: bash ./env.sh >> "$GITHUB_ENV"

      - name: Login to Azure Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.REGISTRY_LOGIN_SERVER }}
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push image
        run: |
          docker build MarketConnect/web/ -t ${{ vars.REGISTRY_LOGIN_SERVER }}/markets-web:${{ github.sha }} --build-arg BASE_MARKET_WEB_PATH=$BASE_MARKET_WEB_PATH --build-arg BASE_DOMAIN_WITH_PROTOCOL=$BASE_DOMAIN_WITH_PROTOCOL --build-arg BASE_MARKET_SERVER_PATH=$BASE_MARKET_SERVER_PATH --build-arg MARKET_SUPABASE_URL=$MARKET_SUPABASE_URL --build-arg MARKET_SUPABASE_ANON_KEY=$MARKET_SUPABASE_ANON_KEY --build-arg MAIN_URL=$MAIN_URL
          docker push ${{ vars.REGISTRY_LOGIN_SERVER }}/markets-web:${{ github.sha }}
        env:
          MAIN_URL: ${{ env.MAIN_URL }}
          BASE_MARKET_WEB_PATH: ${{ env.BASE_MARKET_WEB_PATH }}
          BASE_DOMAIN_WITH_PROTOCOL: ${{ env.BASE_DOMAIN_WITH_PROTOCOL }}
          BASE_MARKET_SERVER_PATH: ${{ env.BASE_MARKET_SERVER_PATH }}
          MARKET_SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          MARKET_SUPABASE_ANON_KEY: ${{ vars.SUPABASE_ANON_KEY }}

  market_server:
    name: Market Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set GIT_REF
        run: bash ./env.sh >> "$GITHUB_ENV"

      - name: Build and push image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ vars.REGISTRY_LOGIN_SERVER }}
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build MarketConnect/server/ -t ${{ vars.REGISTRY_LOGIN_SERVER }}/markets-server:${{ github.sha }}
          docker push ${{ vars.REGISTRY_LOGIN_SERVER }}/markets-server:${{ github.sha }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [superapp_web, superapp_server, markets_web, market_server]
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Set GIT_REF
        run: bash ./env.sh >> "$GITHUB_ENV"

      - name: Deploy to Kubernetes with Helm
        uses: "WyriHaximus/github-action-helm3@v3"
        with:
          exec: helm upgrade --install $GIT_REF ./helm/ --set global.revision=${{ github.sha }} --set-string global.GITHUB_REF=$GIT_REF
          kubeconfig: "${{ secrets.KUBE_CONFIG }}"
        env:
          GIT_REF: ${{ env.GIT_REF }}

