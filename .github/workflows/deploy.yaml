name: Build and deploy

permissions:
  id-token: write
  contents: read
  actions: read

on:
  push:
    branches:
      - "**"

jobs:
  superapp_web:
    name: Superapp Website
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1.6.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set GIT_REF
        run: bash ./env.sh >> "$GITHUB_ENV"

      - name: Login to Azure Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push image
        run: |
          docker build super-app/web/ -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/superapp-web:${{ github.sha }} --build-arg BASE_SUPERAPP_WEB_PATH=$BASE_SUPERAPP_WEB_PATH
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/superapp-web:${{ github.sha }}
        env:
          BASE_SUPERAPP_WEB_PATH: ${{ env.BASE_SUPERAPP_WEB_PATH }}
          
  superapp_server:
    name: Superapp Server
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1.6.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build super-app/server/ -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/superapp-server:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/superapp-server:${{ github.sha }}

  eats_web:
    name: Eats Website
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1.6.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set GIT_REF
        run: bash ./env.sh >> "$GITHUB_ENV"

      - name: Login to Azure Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push image
        run: |
          docker build super-app/web/ -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/superapp-web:${{ github.sha }} --build-arg BASE_EATS_WEB_PATH=$BASE_EATS_WEB_PATH
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/superapp-web:${{ github.sha }}
        env:
          BASE_EATS_WEB_PATH: ${{ env.BASE_EATS_WEB_PATH }}

  eats_server:
    name: Eats Server
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1.6.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build super-app/server/ -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/eats-server:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/eats-server:${{ github.sha }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [superapp_web, superapp_server, eats_web, eats_server]
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Set GIT_REF
        run: bash ./env.sh >> "$GITHUB_ENV"

      - name: Deploy to Kubernetes with Helm
        uses: "WyriHaximus/github-action-helm3@v3"
        with:
          exec: helm upgrade --install $GIT_REF ./helm/ --set global.revision=${{ github.sha }} --set-string global.GITHUB_REF=$GIT_REF
          kubeconfig: "${{ secrets.KUBE_CONFIG }}"
        env:
          GIT_REF: ${{ env.GIT_REF }}
