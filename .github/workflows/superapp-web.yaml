name: Build and deploy

permissions:
  id-token: write
  contents: read
  actions: read

on:
  push:
    branches:
      - '**'

jobs:
  superapp_web:
    name: Superapp Website
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1.6.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
            docker build super-app/web/ -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/superapp-web:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/superapp-web:${{ github.sha }}

  superapp_server:
    name: Superapp Server
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1.6.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push image
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
            docker build super-app/server/ -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/superapp-server:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/superapp-server:${{ github.sha }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [superapp_web, superapp_server]
    environment: production
    steps:
      - uses: actions/checkout@v4

      - name: Set GIT_REF
        run: source ./env.sh

      - name: Deploy to Kubernetes with Helm
        uses: 'WyriHaximus/github-action-helm3@v3'
        with:
          exec: helm upgrade --install develop ./helm/ --set global.revision=${{ github.sha }} --set global.GITHUB_REF=$GIT_REF
          kubeconfig: '${{ secrets.KUBE_CONFIG }}'
        env:
          GIT_REF: $GIT_REF
    
    